<?xml version="1.0" encoding="UTF-8"?>
<project name="emftvm.maven.example" default="all">
	<property name="project.basedir" value="${basedir}"/>
	<property name="project.build.directory" value="${project.basedir}/target"/>
	<property name="emf.version" value="2.15.0"/>
	<property name="emf.ecore2xml.version" value="2.11.0"/>

	<target name="clean">
		<delete dir="target/lib" includes="*.jar">
		</delete>
	</target>

	<target name="get">
		<mkdir dir="target/lib" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/equinox/org.eclipse.equinox.common/3.6.0.v20100503/org.eclipse.equinox.common-3.6.0.v20100503.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/emf/org.eclipse.emf.ecore/${emf.version}/org.eclipse.emf.ecore-${emf.version}.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/emf/org.eclipse.emf.common/${emf.version}/org.eclipse.emf.common-${emf.version}.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/emf/org.eclipse.emf.ecore.xmi/${emf.version}/org.eclipse.emf.ecore.xmi-${emf.version}.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/emf/org.eclipse.emf.mapping.ecore2xml/${emf.ecore2xml.version}/org.eclipse.emf.mapping.ecore2xml-${emf.ecore2xml.version}.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/ow2/asm/asm/8.0/asm-8.0.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/antlr/antlr-runtime/3.2/antlr-runtime-3.2.jar " dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/uml2/uml/5.0.0-v20140602-0749/uml-5.0.0-v20140602-0749.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/core/runtime/3.10.0-v20140318-2214/runtime-3.10.0-v20140318-2214.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/uml2/common/2.0.0-v20140602-0749/common-2.0.0-v20140602-0749.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.maven.apache.org/maven2/org/eclipse/uml2/types/2.0.0-v20140602-0749/types-2.0.0-v20140602-0749.jar" dest="target/lib" skipexisting="true" />
		<get src="https://repo.eclipse.org/content/groups/atl/org/eclipse/m2m/atl/org.eclipse.m2m.atl.emftvm.ant.standalone/4.11.0/org.eclipse.m2m.atl.emftvm.ant.standalone-4.11.0.jar" dest="target/lib" skipexisting="true" />
	</target>

	<target name="all" depends="get">
		<taskdef resource="org/eclipse/m2m/atl/emftvm/ant/antlib.xml">
			<classpath>
				<fileset dir="target/lib" includes="**/*.jar" />
			</classpath>
		</taskdef>
		<emftvm.compile module="Example" modulepath="${project.basedir}/transformations/" outputpath="${project.build.directory}/" charset="UTF-8" />
		<emftvm.compile	outputpath="${project.build.directory}/" charset="UTF-8">
			<moduleset dir="${project.basedir}/transformations/" includes="*.atl" />
		</emftvm.compile>
		<echo message="Registering metamodel UML" />
		<emftvm.registerMetamodel packageClass="org.eclipse.uml2.uml.UMLPackage" resourceFactoryClass="org.eclipse.uml2.uml.internal.resource.UMLResourceFactoryImpl" fileExtension="uml" />
		<echo message="Loading metamodel UML" />
		<emftvm.loadMetamodel name="UML" uri="http://www.eclipse.org/uml2/5.0.0/UML" />
		<echo message="Loading model Example" />
		<emftvm.loadModel name="Example" uri="file:/${project.basedir}/model/Example.uml" />
		<echo message="Running file:/${project.build.directory}/Example.emftvm" />
		<emftvm.run modulepath="file:/${project.build.directory}/" module="Example">
			<metamodel name="UML" />
			<inoutmodel name="Example" as="IN" />
		</emftvm.run>
		<echo message="Saving model EMFTVM-OUT" />
		<emftvm.saveModel name="Example" uri="file:/${project.build.directory}/Example.uml" />
		<echo
			message="Batch running file:/${project.build.directory}/Example.emftvm" />
		<emftvm.run
			modulepath="file:/${project.build.directory}/" module="Example">
			<metamodel name="UML" />
			<inoutmodelset name="IN" dir="${project.basedir}/model"
				outputdir="${project.build.directory}" includes="*.uml" />
		</emftvm.run>
	</target>
</project>
